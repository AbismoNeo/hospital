# Generated by Django 4.0.6 on 2022-08-04 05:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rfc', models.CharField(max_length=13)),
                ('es_paciente', models.BooleanField(default=False)),
                ('es_enfermera', models.BooleanField(default=False)),
                ('es_doctor', models.BooleanField(default=False)),
                ('es_farmacia', models.BooleanField(default=False)),
                ('es_admin', models.BooleanField(default=False)),
                ('es_secretaria', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='atencion_enfermeria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
            ],
            options={
                'verbose_name': 'Atención de enfermería',
            },
        ),
        migrations.CreateModel(
            name='cat_analisis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analisis', models.CharField(max_length=100, verbose_name='Analisis Clinicos')),
            ],
            options={
                'verbose_name': 'Catalogo de Analisis Clinicos',
            },
        ),
        migrations.CreateModel(
            name='cat_capitulos_enfermedades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capitulo', models.CharField(max_length=100, verbose_name='Capitulo de Enfermedad')),
            ],
            options={
                'verbose_name': 'Catalogo de Capitulos de Enfermedades',
            },
        ),
        migrations.CreateModel(
            name='cat_enfermedades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave', models.CharField(max_length=10, verbose_name='Clave de la enfermedad')),
                ('nombre', models.CharField(max_length=150, verbose_name='Nombre de la enfermedad')),
                ('clave_SIS', models.CharField(choices=[('ENFERMEDADES TRANSMISIBLES', 'ENFERMEDADES TRANSMISIBLES'), ('CRÓNICAS DEGENERATIVAS', 'CRÓNICAS DEGENERATIVAS'), ('OTRAS ENFERMEDADES', 'OTRAS ENFERMEDADES'), ('NO APLICA', 'NO APLICA')], default='', max_length=100, verbose_name='Clave SIS')),
                ('capitulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_capitulos_enfermedades')),
            ],
            options={
                'verbose_name': 'Catalogo de Enfermedades',
            },
        ),
        migrations.CreateModel(
            name='cat_escuelas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escuela', models.CharField(max_length=100, verbose_name='Universidad')),
            ],
            options={
                'verbose_name': 'Catalogo de Universidades',
            },
        ),
        migrations.CreateModel(
            name='cat_especialidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidad', models.CharField(max_length=100, verbose_name='Especialidad')),
            ],
            options={
                'verbose_name': 'Catalogo de Especialidades',
            },
        ),
        migrations.CreateModel(
            name='cat_ets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre', models.CharField(max_length=1000, verbose_name='Nombre de la ETS')),
            ],
            options={
                'verbose_name': 'Enfermedades de Transmision Sexual (ETS)',
            },
        ),
        migrations.CreateModel(
            name='cat_genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genero', models.CharField(max_length=50, verbose_name='Genero')),
            ],
            options={
                'verbose_name': 'Catalogo de Generos',
            },
        ),
        migrations.CreateModel(
            name='cat_grupos_terapeuticos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_grupo', models.CharField(max_length=100, verbose_name='Grupos Terapeuticos')),
            ],
            options={
                'verbose_name': 'Catalogo de Grupos Terapeuticos para Medicamentos',
            },
        ),
        migrations.CreateModel(
            name='cat_hospitalizaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivo', models.CharField(max_length=100, verbose_name='Motivo de Entrada')),
            ],
            options={
                'verbose_name': 'Catalogo de Motivos de Hospitalizacion',
            },
        ),
        migrations.CreateModel(
            name='cat_matetrial_curacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave', models.CharField(max_length=15, verbose_name='Clave')),
                ('material', models.CharField(max_length=250, verbose_name='Descripcion')),
                ('presentacion', models.CharField(max_length=100, verbose_name='Presentacion')),
            ],
            options={
                'verbose_name': 'Catalogo de Material de Curacion',
            },
        ),
        migrations.CreateModel(
            name='cat_medicamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave_univ', models.CharField(max_length=15, verbose_name='Clave (SAICA)')),
                ('compuesto', models.CharField(max_length=400, verbose_name='Descripcion')),
                ('unidad_medida', models.CharField(max_length=100, verbose_name='Unidad de Medida')),
                ('grupo_terapeutico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_grupos_terapeuticos', verbose_name='Usada en ')),
            ],
            options={
                'verbose_name': 'Catalogo de Medicamentos',
            },
        ),
        migrations.CreateModel(
            name='cat_operaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operacion', models.CharField(max_length=100, verbose_name='Operacion')),
                ('cveCIE9', models.CharField(max_length=100, verbose_name='Clave CIE9')),
                ('nivel', models.IntegerField(verbose_name='Nivel')),
            ],
            options={
                'verbose_name': 'Catalogo de Operaciones',
            },
        ),
        migrations.CreateModel(
            name='cat_parentesco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentesco', models.CharField(max_length=100, verbose_name='Parentesco')),
            ],
            options={
                'verbose_name': 'Catalogo de Parentesco',
            },
        ),
        migrations.CreateModel(
            name='cat_servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicio', models.CharField(max_length=100, verbose_name='Uso de Material')),
            ],
            options={
                'verbose_name': 'Catalogo de usos de Material de Curacion',
            },
        ),
        migrations.CreateModel(
            name='cita_turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora', models.CharField(max_length=30, verbose_name='Hora de la Cita')),
                ('turno', models.CharField(choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Nocturno', 'Nocturno')], default='', max_length=10, verbose_name='Turno')),
            ],
        ),
        migrations.CreateModel(
            name='consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Es consulta de Urgencias')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('presentacion', models.CharField(help_text='Corroborar que es el paciente', max_length=1000, verbose_name='Presentacion del Paciente')),
                ('subjetivo', models.CharField(help_text='Lo que dice el paciente', max_length=1000, verbose_name='Subjetivo del Paciente')),
                ('objetivo', models.CharField(help_text='Lo que se ve en el paciente', max_length=1000, verbose_name='Objetivo del Paciente')),
                ('evaluacion', models.CharField(help_text='Lo que el medico cree tiene el paciente', max_length=1000, verbose_name='Evaluacion del Paciente')),
                ('plan', models.CharField(help_text='Lo que se hara con el paciente', max_length=1000, verbose_name='Plan para el Paciente')),
                ('pronostico', models.CharField(help_text='Se espera o no el regreso del paciente', max_length=1000, verbose_name='Pronostico del Paciente')),
                ('tratamiento_no_farm', models.CharField(help_text='Tratamiento no farmacologico', max_length=2000, verbose_name='Indicaciones')),
                ('hospitalizacion', models.BooleanField(default=False, verbose_name='Hospitalizar')),
                ('programado', models.BooleanField(default=False, verbose_name='Hospitalzacion programada')),
                ('nota_medica_hospitalizado', models.BooleanField(default=False, verbose_name='Nota Medica')),
                ('receta', models.BooleanField(default=False, verbose_name='Receta')),
                ('id_enfermedad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_enfermedades', verbose_name='Enfermedad')),
            ],
            options={
                'verbose_name': 'Consulta realizada al paciente',
                'verbose_name_plural': 'Consultas realizadas a los pacientes',
            },
        ),
        migrations.CreateModel(
            name='farmacia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_med', models.CharField(choices=[('Medicamento', 'Medicamento'), ('Material de Curación', 'Material de Curación')], default='', max_length=50, verbose_name='Tipo de Stock')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('Lote', models.CharField(max_length=15, verbose_name='Lote')),
                ('Fecha_caducidad', models.DateField(verbose_name='Fecha de caducidad')),
                ('id_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_matetrial_curacion', verbose_name='Material de Curación')),
                ('id_medicamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_medicamentos', verbose_name='Medicamento')),
            ],
        ),
        migrations.CreateModel(
            name='hospitalizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha Ingreso')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora Ingreso')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Urgencia')),
                ('cirugia', models.BooleanField(default=False, verbose_name='Cirugia')),
                ('cama', models.CharField(max_length=10, verbose_name='Cama')),
                ('dieta', models.CharField(max_length=200, verbose_name='Dieta')),
                ('familiar_responsable', models.CharField(max_length=200, verbose_name='Familiar')),
                ('numero_telefono', models.CharField(max_length=50, verbose_name='Telefono')),
                ('consulta_referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consulta_referencia', to='hospitapp.consulta')),
            ],
            options={
                'verbose_name': 'Hospitalizacion del paciente',
                'verbose_name_plural': 'Hospitalizacion de los pacientes',
            },
        ),
        migrations.CreateModel(
            name='indicadores_pre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('Hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('peso', models.FloatField(verbose_name='Peso en kgs')),
                ('talla', models.FloatField(verbose_name='Talla en mts')),
                ('imc', models.FloatField(verbose_name='Indice de Masa Corporal (IMC)')),
                ('circ_abdominal', models.FloatField(verbose_name='Circunferencia Abdominal')),
                ('presion', models.FloatField(verbose_name='Presion Sanguinea')),
                ('frec_cardiaca', models.IntegerField(verbose_name='Frecuencia Cardiaca')),
                ('frec_respiratoria', models.IntegerField(verbose_name='Frecuencia Respiratoria')),
                ('temperatura', models.FloatField(verbose_name='Temperatura en Grados °C')),
                ('saturacion_o2', models.FloatField(verbose_name='Saturación de Oxigeno en %')),
                ('glucemia_capilar', models.FloatField(verbose_name='Glucemia Capilar')),
                ('nutricion', models.CharField(choices=[('No tiene desnutrición', 'No tiene desnutrición'), ('Riesgo de denutrición', 'Riesgo de denutrición'), ('Desnutrición moderada', 'Desnutrición moderada'), ('Desnutrición Grave', 'Desnutrición Grave'), ('Sobrepeso', 'Sobrepeso'), ('Obesidad', 'Obesidad')], default='', max_length=40, verbose_name='Estado Nutricional')),
                ('seguimiento_hospitalario', models.BooleanField(default=False, verbose_name='Segumiento Hospitalizado')),
                ('enfermera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Enfermera', to=settings.AUTH_USER_MODEL, verbose_name='Enfermera')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Paciente', to=settings.AUTH_USER_MODEL, verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Indicadores del paciente',
                'verbose_name_plural': 'Indicadores de los pacientes',
            },
        ),
        migrations.CreateModel(
            name='material_areas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(choices=[('Enfermería', 'Enfermería'), ('Carro Rojo', 'Carro Rojo'), ('Urgencias', 'Urgencias'), ('Hospitalizacion', 'Hospitalizacion')], default='', max_length=50, verbose_name='Area')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('tipo_material', models.CharField(choices=[('Medicamento', 'Medicamento'), ('Material de Curación', 'Material de Curación')], default='', max_length=50, verbose_name='Tipo Material')),
                ('id_farmacia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.farmacia', verbose_name='Medicamento / Material de Curación')),
            ],
        ),
        migrations.CreateModel(
            name='material_operacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('id_material_operacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.material_operacion', verbose_name='Material de Operacion')),
            ],
        ),
        migrations.CreateModel(
            name='medical_staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(max_length=20, verbose_name='Telefono')),
                ('cedula_prof', models.CharField(max_length=15, verbose_name='Cedula Profesional')),
                ('fecha_nac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('modulo', models.IntegerField(verbose_name='Modulo donde da consulta')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('id_escuela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_escuelas', verbose_name='Universidad')),
                ('id_especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_especialidades', verbose_name='Especialidad')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil Personal Medico',
                'verbose_name_plural': 'Perfiles de Personal Medico',
            },
        ),
        migrations.CreateModel(
            name='patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefono', models.CharField(max_length=20, verbose_name='Telefono')),
                ('direccion', models.CharField(max_length=200, verbose_name='Direccion')),
                ('fecha_nac', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('id_sexo', models.CharField(choices=[('MASCULINO', 'MASCULINO'), ('FEMENINO', 'FEMENINO')], max_length=10, verbose_name='Sexo')),
                ('tipo_sangre', models.CharField(max_length=5, verbose_name='Tipo de Sangre')),
                ('derechohabiente', models.BooleanField(default=False, verbose_name='Derechohabiente')),
                ('afiliado', models.BooleanField(default=False, verbose_name='Afiliado')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('id_genero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_genero')),
                ('parentesco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_parentesco')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil Paciente',
                'verbose_name_plural': 'Perfiles de Pacientes',
            },
        ),
        migrations.CreateModel(
            name='surtir_recetas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('fecha_surtido', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora_surtido', models.TimeField(auto_now=True, verbose_name='Hora')),
            ],
        ),
        migrations.CreateModel(
            name='solicitud_operacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Urgencia')),
                ('fecha_programada', models.DateField(auto_now=True, verbose_name='Fecha Programada')),
                ('hospitalizado', models.BooleanField(default=False, verbose_name='Hospitalizado')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('atendido', models.BooleanField(default=False, verbose_name='atendido')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('medico_solicita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico solicitante')),
                ('tipo_estudio', models.ForeignKey(limit_choices_to={'nivel': 3}, on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_operaciones', verbose_name='Estudio solicitado')),
            ],
        ),
        migrations.CreateModel(
            name='solicitud_laboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Urgencia')),
                ('hospitalizado', models.BooleanField(default=False, verbose_name='Hospitalizado')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('atendido', models.BooleanField(default=False, verbose_name='atendido')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('medico_solicita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico solicitante')),
                ('tipo_analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_analisis', verbose_name='Analisis')),
            ],
        ),
        migrations.CreateModel(
            name='solicitud_estudios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Urgencia')),
                ('hospitalizado', models.BooleanField(default=False, verbose_name='Hospitalizado')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('atendido', models.BooleanField(default=False, verbose_name='atendido')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('medico_solicita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico solicitante')),
                ('tipo_estudio', models.ForeignKey(limit_choices_to={'nivel': 2}, on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_operaciones', verbose_name='Estudio solicitado')),
            ],
        ),
        migrations.CreateModel(
            name='solicitud_especialista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urgencia', models.BooleanField(default=False, verbose_name='Urgencia')),
                ('hospitalizado', models.BooleanField(default=False, verbose_name='Hospitalizado')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('atendido', models.BooleanField(default=False, verbose_name='atendido')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('medico_solicita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico solicitante')),
                ('tipo_especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_especialidades', verbose_name='Especialista solicitado')),
            ],
        ),
        migrations.CreateModel(
            name='seguimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Turno', models.CharField(choices=[('Matutino', 'Matutino'), ('Vespertino', 'Vespertino'), ('Nocturno', 'Nocturno')], default='', max_length=10, verbose_name='Turno')),
                ('requiere_limpieza_ropa', models.BooleanField(default=False, verbose_name='Cambio de Ropa de Cama y Demas')),
                ('administrar_medicamentos', models.BooleanField(default=False, verbose_name='Administracion de Medicamentos')),
                ('edo_salud', models.CharField(choices=[('Bueno', 'Bueno'), ('Regular', 'Regular'), ('Malo', 'Malo')], default='', max_length=10, verbose_name='Estado de Salud')),
                ('aloja_conjunto', models.BooleanField(default=False, verbose_name='Alojamiento Conjunto')),
                ('venoclisis', models.BooleanField(default=False, verbose_name='Venoclisis')),
                ('tipo_venoclisis', models.CharField(choices=[('Sello de herparina', 'Sello de herparina'), ('vena permeable para 8 horas', 'vena permeable para 8 horas'), ('vena permeable para 12 horas', 'vena permeable para 12 horas'), ('vena permeable para 24 horas', 'vena permeable para 24 horas')], default='', max_length=30, verbose_name='Tipo Venoclisis')),
                ('control_fluidos', models.BooleanField(default=False, verbose_name='Control de Fluidos')),
                ('cant_fluidos', models.IntegerField(verbose_name='Cantidad de fluidos')),
                ('control_termico', models.BooleanField(default=False, verbose_name='Control Termico')),
                ('vigilancia_extrema', models.BooleanField(default=False, verbose_name='Vigilancia Extrema')),
                ('vigilar_sangrado', models.BooleanField(default=False, verbose_name='Vigilar Sangrado')),
                ('sondas', models.BooleanField(default=False, verbose_name='Sonda')),
                ('sonda_tipo', models.CharField(choices=[('Sonda Vesical Foley', 'Sonda Vesical Foley'), ('Sonda Nasograstrica', 'Sonda Nasograstrica'), ('Sonda Nelaton', 'Sonda Nelaton'), ('Sonda Intestinal', 'Sonda Intestinal'), ('Sonda Rectal', 'Sonda Rectal')], default='', max_length=50, verbose_name='Tipo de Sonda')),
                ('transfusion', models.BooleanField(default=False, verbose_name='Transfusion')),
                ('paquetes_globulares', models.IntegerField(verbose_name='Paquetes globulares')),
                ('destrostix', models.IntegerField(verbose_name='Destrostis')),
                ('cuidado_especial', models.BooleanField(default=False, verbose_name='Cuidado Especial')),
                ('ce_indicaciones', models.CharField(max_length=300, verbose_name='Indicaciones de cuidado especial')),
                ('oxigeno', models.BooleanField(default=False, verbose_name='Oxigeno')),
                ('oxigeno_lt_min', models.IntegerField(verbose_name='Litros por minuto')),
                ('preoperatorio', models.BooleanField(default=False, verbose_name='Preoperatorio')),
                ('examenes_laboratorio', models.BooleanField(default=False, verbose_name='Examenes de Laboratorio')),
                ('estudios', models.BooleanField(default=False, verbose_name='Estudios')),
                ('otros', models.CharField(max_length=500, verbose_name='Otras Indicaciones')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('signos_vitales', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.indicadores_pre')),
            ],
        ),
        migrations.CreateModel(
            name='resultados_laboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_descriptivo', models.CharField(max_length=2000, verbose_name='Descripcion')),
                ('mediciones', models.CharField(max_length=5000, verbose_name='Resultados')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('medical_staff_lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico Elaboró')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.solicitud_laboratorio', verbose_name='Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='resultados_estudios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_descriptivo', models.CharField(max_length=2000, verbose_name='Descripcion')),
                ('mediciones', models.CharField(max_length=5000, verbose_name='Resultados')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('medical_staff_lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico Elaboró')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
                ('referencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.solicitud_estudios', verbose_name='Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicaciones', models.CharField(max_length=500, verbose_name='Indicaciones')),
                ('id_consulta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_consulta', to='hospitapp.consulta')),
                ('id_medicamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_medicamentos', verbose_name='Medicamento')),
            ],
            options={
                'verbose_name': 'Recetas al paciente',
                'verbose_name_plural': 'Recetas a los pacientes',
            },
        ),
        migrations.CreateModel(
            name='personal_operacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_personal_operacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.material_operacion', verbose_name='Material de Operacion')),
                ('id_solicitud_operacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.solicitud_operacion', verbose_name='Operaciones')),
            ],
        ),
        migrations.CreateModel(
            name='pedir_material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(choices=[('Enfermería', 'Enfermería'), ('Carro Rojo', 'Carro Rojo'), ('Urgencias', 'Urgencias'), ('Hospitalizacion', 'Hospitalizacion')], default='', max_length=50, verbose_name='Area')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('tipo_material', models.CharField(choices=[('Medicamento', 'Medicamento'), ('Material de Curación', 'Material de Curación')], default='', max_length=50, verbose_name='Tipo Material')),
                ('medico_solicita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Solicitado por')),
            ],
        ),
        migrations.CreateModel(
            name='operations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medico_responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff')),
                ('operacion_recibida', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_operaciones', verbose_name='operacion recibida')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Operaciones del Paciente',
                'verbose_name_plural': 'Operaciones de los Pacientes',
            },
        ),
        migrations.CreateModel(
            name='nota_medica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('id_consulta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.consulta')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='mensajero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='ASUNTO')),
                ('mensaje', models.CharField(max_length=1000, verbose_name='MENSAJE')),
                ('enviado', models.DateTimeField(auto_now=True)),
                ('leido', models.BooleanField(default=False, verbose_name='Leido')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Destinatario', to=settings.AUTH_USER_MODEL, verbose_name='DESTINO')),
                ('remitente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Remitente', to=settings.AUTH_USER_MODEL, verbose_name='ENVIA')),
            ],
        ),
        migrations.CreateModel(
            name='material_usado_enfermeria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(verbose_name='Cantidad')),
                ('id_atencion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.atencion_enfermeria', verbose_name='Atencion')),
                ('material_usado', models.ForeignKey(limit_choices_to='Enfermería', on_delete=django.db.models.deletion.CASCADE, to='hospitapp.material_areas', verbose_name='Material_usado')),
            ],
        ),
        migrations.AddField(
            model_name='material_operacion',
            name='id_solicitud_operacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.solicitud_operacion', verbose_name='Operaciones'),
        ),
        migrations.AddField(
            model_name='hospitalizacion',
            name='medico_responsable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico Responsable'),
        ),
        migrations.AddField(
            model_name='hospitalizacion',
            name='motivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_hospitalizaciones', verbose_name='Motivo'),
        ),
        migrations.AddField(
            model_name='hospitalizacion',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients'),
        ),
        migrations.AddField(
            model_name='hospitalizacion',
            name='parentesco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_parentesco', verbose_name='Parentesco'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='id_indicadores',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.indicadores_pre', verbose_name='Indicadores'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='id_medico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Medico'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='id_paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente'),
        ),
        migrations.CreateModel(
            name='cita_paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_cita', models.DateField(verbose_name='Fecha de la cita')),
                ('id_hora', models.CharField(max_length=30, verbose_name='Hora de la Cita')),
                ('id_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Doctor/Especialista')),
                ('id_paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente')),
            ],
        ),
        migrations.AddField(
            model_name='cat_matetrial_curacion',
            name='usado_en',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_servicios', verbose_name='Usado en'),
        ),
        migrations.AddField(
            model_name='atencion_enfermeria',
            name='enfermera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff', verbose_name='Enfermera'),
        ),
        migrations.AddField(
            model_name='atencion_enfermeria',
            name='id_paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.patients', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='atencion_enfermeria',
            name='procedimiento',
            field=models.ForeignKey(limit_choices_to={'nivel': 1}, on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_operaciones', verbose_name='Procedimiento de Enfermería'),
        ),
        migrations.CreateModel(
            name='antecedentes_medicos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardiovasculares', models.BooleanField(verbose_name='Problemas Cardiacos')),
                ('pulmonares', models.BooleanField(verbose_name='Problemas Pulmonares')),
                ('digestivos', models.BooleanField(verbose_name='Problemas Digestivos')),
                ('renales', models.BooleanField(verbose_name='Problemas Renales')),
                ('quirurgicos', models.BooleanField(verbose_name='Ha tenido Operaciones')),
                ('transfusiones', models.BooleanField(verbose_name='Ha tenido transfusiones')),
                ('alcoholismo', models.BooleanField(verbose_name='Ha padecido alcoholismo')),
                ('tabaquismo', models.BooleanField(verbose_name='Ha padecido tabaquismo')),
                ('drogas', models.BooleanField(verbose_name='Problemas de Drogradiccion')),
                ('inmunizaciones', models.BooleanField(verbose_name='Se ha vacunado')),
                ('padre_vivo', models.BooleanField(verbose_name='Su padre vive')),
                ('madre_vivo', models.BooleanField(verbose_name='Su madre vive')),
                ('hnos_Tiene', models.BooleanField(verbose_name='Tiene hermanos')),
                ('hnos_cuantos', models.IntegerField(verbose_name='Numero de hermanos')),
                ('enfermeades_padre', models.CharField(max_length=500, verbose_name='Enfermedades del Padre')),
                ('enfermeades_madre', models.CharField(max_length=500, verbose_name='Enfermedades de la Madre')),
                ('enfermeades_hnos', models.CharField(max_length=500, verbose_name='Enfermedades de los Hermanos')),
                ('otras_anotaciones', models.CharField(max_length=1000, verbose_name='Otras Anotaciones')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antecedentes del paciente',
                'verbose_name_plural': 'Antecedentes de los pacientes',
            },
        ),
        migrations.CreateModel(
            name='antecedentes_ginecologicos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menarquia', models.IntegerField(verbose_name='Edad Primera Mestruacion')),
                ('ritmo', models.IntegerField(verbose_name='Dias aproximados entre cada Mestruacion')),
                ('FUM', models.DateField(verbose_name='Fecha de Ultima Mestruacion')),
                ('Duracion', models.IntegerField(verbose_name='Dias aproximados que tarda la Mestruacion')),
                ('Cant_Sangre', models.CharField(choices=[('Eumenorrea - regla escasa', 'Eumenorrea - regla escasa'), ('Hipermenorrea - reglas abundantes.', 'Hipermenorrea - reglas abundantes.'), ('Amenorrea - ausencia de menstruación', 'Amenorrea - ausencia de menstruación'), ('Polihipermenorrea - regla frecuente y abundante', 'Polihipermenorrea - regla frecuente y abundante'), ('Oligohipomenorrea - regla a largos intervalos y escasa', 'Oligohipomenorrea - regla a largos intervalos y escasa'), ('Oligohipermenorrea - reglas poco frecuentes y abundantes', 'Oligohipermenorrea - reglas poco frecuentes y abundantes'), ('Polihipomenorrea - reglas frecuentes y escasas', 'Polihipomenorrea - reglas frecuentes y escasas'), ('Hipermenorrea dolorosa - regla abundante y dolorosa', 'Hipermenorrea dolorosa - regla abundante y dolorosa'), ('Metrorragias. Hemorragias endometriales irregulares y acíclicas', 'Metrorragias. Hemorragias endometriales irregulares y acíclicas')], default='', max_length=100, verbose_name='Cantidad de Sangre')),
                ('frecuencia', models.CharField(choices=[('Regular', 'Regular'), ('Irregular', 'Irregular')], default='', max_length=50, verbose_name='Frecuencia de Mestruacion')),
                ('dolor', models.BooleanField(verbose_name='Presencia de Dolor en la Mestruacion')),
                ('gestaciones', models.IntegerField(verbose_name='Numero de Gestaciones')),
                ('partos', models.IntegerField(verbose_name='Numero de Partos')),
                ('fup', models.DateField(verbose_name='Fecha de Ultimo Parto')),
                ('abortos', models.IntegerField(verbose_name='Numero de Abortos')),
                ('fua', models.DateField(verbose_name='Fecha de Ultimo Aborto')),
                ('cesareas', models.IntegerField(verbose_name='Numero de Cesareas')),
                ('fuc', models.DateField(verbose_name='Fecha de Ultima Cesarea')),
                ('fupapa', models.DateField(verbose_name='Fecha de Ultimo Papanicolau')),
                ('ets', models.CharField(max_length=500, verbose_name='Enfermedades de Transmisión Sexual')),
                ('inicio_sexo', models.IntegerField(verbose_name='Edad de Inicio Sexual')),
                ('frecuencia_sexo', models.IntegerField(verbose_name='Frecuencia de relaciones por semana')),
                ('num_parejas', models.IntegerField(verbose_name='Numero de Parejas sexuales')),
                ('metodo_anticonceptivo', models.CharField(choices=[('El preservativo', 'El preservativo'), ('El espermicida', 'El espermicida'), ('El preservativo femenino', 'El preservativo femenino'), ('El diafragma', 'El diafragma'), ('La esponja vaginal', 'La esponja vaginal'), ('La píldora', 'La esponja vaginal'), ('La minipíldora Progestágeno', 'La minipíldora Progestágeno'), ('La píldora del día después (PDS)', 'La píldora del día después (PDS)'), ('El adhesivo anticonceptivo', 'El adhesivo anticonceptivo'), ('El anillo vaginal', 'El anillo vaginal'), ('El anticonceptivo inyectable', 'El anticonceptivo inyectable'), ('El implante anticonceptivo', 'El implante anticonceptivo'), ('Dispositivo intrauterino (DIU)', 'Dispositivo intrauterino (DIU)'), ('Vasectomía', 'Vasectomía'), ('Ligadura de trompas', 'Ligadura de trompas'), ('Método del calendario menstrual', 'Método del calendario menstrual'), ('Coito interrumpido', 'Coito interrumpido'), ('Moco cervical', 'Moco cervical'), ('Lactancia materna', 'Lactancia materna')], default='', max_length=100, verbose_name='Metodos Anticonceptivos')),
                ('problemas_sexo', models.CharField(max_length=500, verbose_name='Problemas Sexuales')),
                ('menopausia', models.BooleanField(verbose_name='Ya presentó la menopausia')),
                ('edad_menopausia', models.IntegerField(verbose_name='Edad que tuvo la menopausia')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Antecedentes Ginecologicos de la paciente',
                'verbose_name_plural': 'Antecedentes Ginecologicos de las pacientes',
            },
        ),
        migrations.CreateModel(
            name='analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analisis_hecho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_analisis', verbose_name='analisis hechos')),
                ('medico_responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.medical_staff')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analisis Clinicos hechos al Paciente',
                'verbose_name_plural': 'Analisis Clinicos hechos a los Pacientes',
            },
        ),
        migrations.CreateModel(
            name='alta_hospitalizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnostico', models.CharField(max_length=500, verbose_name='Diagnostico al Alta')),
                ('curado', models.BooleanField(default=False, verbose_name='Curado')),
                ('dieta', models.CharField(max_length=1000, verbose_name='Dieta Especial')),
                ('restricciones', models.CharField(max_length=1000, verbose_name='Restricciones')),
                ('dispositivos_ayuda', models.CharField(max_length=500, verbose_name='Dispositivos de Ayuda')),
                ('cuidados_heridas', models.CharField(max_length=1000, verbose_name='Cuidado de Heridas')),
                ('indicaciones_indicadores', models.CharField(max_length=1000, verbose_name='Instrucciones para tomar los inicadores')),
                ('sintomas_peligro', models.CharField(max_length=1000, verbose_name='Sintomas de Riesgo')),
                ('cita_seguimiento', models.CharField(max_length=100, verbose_name='Cita para Seguimiento')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha')),
                ('hora', models.TimeField(auto_now=True, verbose_name='Hora')),
                ('id_hospitalizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.hospitalizacion')),
            ],
        ),
        migrations.CreateModel(
            name='alergies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alergia_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospitapp.cat_medicamentos', verbose_name='Alergia a')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alergias del Paciente',
                'verbose_name_plural': 'Alergias de los Pacientes',
            },
        ),
    ]
